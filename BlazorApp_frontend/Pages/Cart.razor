@page "/Cart"
@using HttpApiClient
@using HttpModels
@using System.Text.Json

@inject ApiClient _apiClient

@code
{
    private HttpModels.Cart? _cart;

    private List<Product>? _products;
    private List<Category>? _categories;
    private string? message;
    private string? email;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _cart = await _apiClient.GetCart();
        }
        catch(Exception ex)
        {
            message = ex.Message;
        }
    }

    public async void AddProductToCart(int productId)
    {

        var item = _cart.CartItems.FirstOrDefault(it => it.ProductId == productId);
        if (item == null)
        {
            item = new CartItem() { ProductId = productId, Count = 1, CartId = _cart.Id };
            await _apiClient.AddCartItem(item);
        }
        else
        {
            item.Count++;
            await _apiClient.UpdateCartItem(item);

        }
        Count = item.Count;
        StateHasChanged();   
    }

    public async void RemoveProductFromCart(int productId)
    {
        _cart = await _apiClient.GetCart();
        var item = _cart.CartItems.FirstOrDefault(it => it.ProductId ==  productId);
        if (item != null)
        {
            item.Count--;
            if (item.Count == 0)
                await _apiClient.RemoveCartItem(item);
            else
                await _apiClient.UpdateCartItem(item);

            Count = item.Count;              
        }

        StateHasChanged();
    }

    int Count { get; set; } = 0;

    private async void SendEmail()
    {
        var json = JsonSerializer.Serialize(_cart);
        var message = new MessageInfo()
            {
                Email = email,
                Subject = "Cart",
                Body = json
            };

        await _apiClient.SendEmail(message);
    }
}

<h3>Cart</h3>

@if(message == null)
{
    <button class="btn btn-primary" @onclick="SendEmail">Sent cart to</button>
    <input type="email" @bind="email" >
    <br />
    if (_cart != null)
    {
        <ul>
            @foreach (var @cartItem in _cart.CartItems)
            {
                <li>
                    <a href="/ProductInfo/@cartItem.Product.Id"><img src="@cartItem.Product.Image" width="100" height="100"/></a>
                    <br>
                    <div>@cartItem.Product.Name :: @cartItem.Product.Price</div>
                    <br/> <input type="submit" value="+" @onclick="@(e => AddProductToCart(@cartItem.Product.Id))">
                    <div>Кол-во: @cartItem.Count</div>
                    <input type="submit" value="-" @onclick="@(e => RemoveProductFromCart(@cartItem.Product.Id))" >
                </li>
            }
        </ul>
    }
}
else
{
    <div>@message</div>
}